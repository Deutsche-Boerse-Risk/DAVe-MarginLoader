


package CIL.CIL_v001.Prisma_v001;

import "CIL/ObjectList.proto";

enum Version
{
    SOD      = 1;
    INTR     = 2;
    EOD      = 3;
    LIVE     = 4;
}

// header for entities sent from Prisma
message PrismaHeader
{
    optional Version                version_id       = 1; //o|Version (SOD, LIVE, EOD, INTR ...)
    optional int32                  business_date    = 2; //o|Current business date [YYYYMMDD]
    optional int64                  timestamp        = 3; //o|Snapshot timestamp (generation/send time) [time in msec in epoch]
    repeated int32                  gpb_extension_id = 4; //o|Entity type contained in this message
    optional int32                  id               = 5; //o|Id [TTSave id]
    optional uint32                 message_count    = 6; //o|Count of messages the snapshot is split into
    optional int32                  message_id       = 7; //o|Id of the current message in the snapshot 1 .. message_count
}

extend CIL.GPBHeader
{
    optional  PrismaHeader              prisma_header            = 301;
}

enum ActionLevel
{
    AL_WARNING      = 1;
    AL_THROTTLE     = 2;
    AL_STOP         = 3;
}

enum LimitType
{
    LT_TMR          = 1; // Total Margin Requirement
    LT_CULI         = 2; // Premium margin + Current margin + Variational margin + Option premium
    LT_CASH         = 3; // Variation margin + Option premium
    LT_NDM          = 4; // Additional margin + Future spread margin
}

enum Flag
{
    F_TRUE          = 1;
    F_FALSE         = 2;
}

message RiskLimitEvent
{
    optional  string       mtnMember               =   1;
    optional  string       affClearer              =   2;
    optional  string       affMember               =   3;
    optional  LimitType    limitType               =   4;
    optional  ActionLevel  actionLevel             =   5;
    optional  double       limitAmount             =  11;
    optional  double       utilization             =   6;
    optional  int64        timestamp               =   7;
    optional  Flag         rebroadcastFlag         =   8;
    optional  Flag         breachConfirmationFlag  =   9;
    optional  int32        versionID               =  10;

}

// margin on liquidation group level

message LiquiGroupMarginKey {
    optional                           string clearer                        = 1;
    optional                           string member                         = 2;
    optional                           string account                        = 3;
    optional                           string margin_class                   = 4;
    optional                           string margin_currency                = 5;
}

message LiquiGroupMargin {
    optional              LiquiGroupMarginKey key                            = 1;
    optional                           string margin_group                   = 2;
    optional                           double premium_margin                 = 3;
    optional                           double current_liquidating_margin     = 4;
    optional                           double futures_spread_margin          = 5;
    optional                           double additional_margin              = 6;
    optional                           double unadjusted_margin_requirement  = 7;
    optional                           double variation_premium_payment      = 8;
}

// margin on account level

message AccountMarginKey {
    optional                           string clearer                        = 1;
    optional                           string member                         = 2;
    optional                           string account                        = 3;
    optional                           string margin_currency                = 4;
}

message AccountMargin {
    optional                 AccountMarginKey key                            = 1;
    optional                           string clearing_currency              = 2;
    optional                           string pool                           = 3;
    optional                           double margin_req_in_margin_curr      = 4;
    optional                           double margin_req_in_clr_curr         = 5;
    optional                           double unadjusted_margin_requirement  = 6;
    optional                           double variation_premium_payment      = 7;
}


// margin on pool level in margin currency

message PoolMarginKey {
    optional                           string clearer                        = 1;
    optional                           string pool                           = 2;
    optional                           string margin_currency                = 3;
}

message PoolMargin {
    optional                    PoolMarginKey key                            = 1;
    optional                           string clr_rpt_currency               = 2;
    optional                           double required_margin                = 3;
    optional                           double cash_collateral_amount         = 4;
    optional                           double adjusted_securities            = 5;
    optional                           double adjusted_guarantee             = 6;
    optional                           double over_under_in_margin_curr      = 7;
    optional                           double over_under_in_clr_rpt_curr     = 8;
    optional                           double vari_prem_in_margin_curr       = 9;
    optional                           double adjusted_exchange_rate         = 10;
    optional                           string pool_owner                     = 11;
}


// margin on pool level in clearing/reporting currency

message PoolMarginClearingCurrencyKey {
    optional                           string clearer                        = 1;
    optional                           string pool                           = 2;
}

message PoolMarginClearingCurrency {
    optional    PoolMarginClearingCurrencyKey key                            = 1;
    optional                           string clr_rpt_currency               = 2;
    optional                           string pool_type                      = 3;
    optional                           double surplus_shortfall              = 4;
    optional                           double used_surplus_shortfall         = 5;
    optional                           double aggregated_total_margin        = 6;
    optional                           double aggregated_variation_premium   = 7;
    optional                           double aggregated_cash_collateral     = 8;
    optional                           double aggregated_adjusted_securities = 9;
    optional                           double aggregated_adjusted_guarantee  = 10;
    optional                           double reservation_amount             = 11;
    optional                           string pool_owner                     = 12;
}

// margin on clearer level incl. account details (former FTMRGREQ file)

message ClearerMargin {
    optional                           string clearer                    =  1;
    optional                           string clearing_currency          =  2;
    optional                           double clearer_margin_requirement =  3;
    optional                           double clearer_shortfall_surplus  =  4;
    optional                           double clearer_variation_premium  =  5;
    optional                           string member                     =  6;
    optional                           string eurex_classic_account_type =  7; // equals to account unless account is flex account; if flex account, A8 is filled here
    optional                           string account                    =  8;
    optional                           string account_margin_currency    =  9;
    optional                           double account_margin_requirement = 10;
    optional                           double account_variation_premium  = 11;
}

// Position report

message PositionReportKey {
    optional                           string clearer                        = 1;
    optional                           string member                         = 2;
    optional                           string account                        = 3;
    optional                           string liquidation_group              = 4;
    optional                           string liquidation_group_split        = 5;
    optional                           string product                        = 6;
    optional                           string call_put                       = 7;
    optional                           int32  contract_year                  = 8;
    optional                           int32  contract_month                 = 9;
    optional                           int32  expiry_day                     = 10;
    optional                           double exercise_price                 = 11;
    optional                           string version                        = 12;
    optional                           string flex_contract_symbol           = 13;
}

message PositionReport {
    optional                PositionReportKey key                         =  1;
    optional                           double net_quantity_ls             =  2;
    optional                           double net_quantity_ea             =  3;
    optional                           string clearing_currency           =  4;
    optional                           double m_var                       =  5;
    optional                           double comp_var                    =  6;
    optional                           double comp_correlation_break      =  7;
    optional                           double comp_compression_error      =  8;
    optional                           double comp_liquidity_add_on       =  9;
    optional                           double comp_long_option_credit     = 10;
    optional                           string product_currency            = 11;
    optional                           double variation_premium_payment   = 12;
    optional                           double premium_margin              = 13;
    optional                           double normalized_delta            = 14;
    optional                           double normalized_gamma            = 15;
    optional                           double normalized_vega             = 16;
    optional                           double normalized_rho              = 17;
    optional                           double normalized_theta            = 18;
    optional                           string underlying                  = 19;
}

// margin on liquidation group split level

message LiquiGroupSplitMarginKey {
    optional                           string clearer                        = 1;
    optional                           string member                         = 2;
    optional                           string account                        = 3;
    optional                           string liquidation_group              = 4;
    optional                           string liquidation_group_split        = 5;
    optional                           string margin_currency                = 6;
}

message LiquiGroupSplitMargin {
    optional         LiquiGroupSplitMarginKey key                            = 1;
    optional                           double premium_margin                 = 2;
    optional                           double market_risk                    = 3;
    optional                           double liqu_risk                      = 4;
    optional                           double long_option_credit             = 5;
    optional                           double variation_premium_payment      = 6;
}

// risk limit utilization

message RiskLimitUtilizationKey {
    optional                           string clearer                        = 1;
    optional                           string member                         = 2;
    optional                           string maintainer                     = 3;
    optional                           string limit_type                     = 4;
}

message RiskLimitUtilization {
    optional          RiskLimitUtilizationKey key                            = 1;
    optional                           double utilization                    = 2;
    optional                           double warning_level                  = 3;
    optional                           double throttle_level                 = 4;
    optional                           double reject_level                   = 5;
}

// define GPBObject extensions

extend CIL.GPBObject {
    optional  RiskLimitEvent              risk_limit_event                     = 40006;
    optional  LiquiGroupMargin            liqui_group_margin                   = 40009;
    optional  AccountMargin               account_margin                       = 40010;
    optional  PoolMargin                  pool_margin                          = 40011;
    optional  PoolMarginClearingCurrency  pool_margin_clearing_currency        = 40012;
    optional  ClearerMargin               clearer_margin                       = 40013;
    optional  PositionReport              position_report                      = 40014;
    optional  LiquiGroupSplitMargin       liqui_group_split_margin             = 40015;
    optional  RiskLimitUtilization        risk_limit_utilization               = 40016;
}


// use a dummy message to provide a config id which is required in the generated code

message PrismaReports_proto
{
    optional  string                CONFIG_ID             =  1 [default = "CIL_v001.PrismaReports_v001"];
    optional  string                SIR_NUMBER            =  2 [default = "361372"];
    optional  string                GPB_VERSION           =  3 [default = "2.4.1"];
}


